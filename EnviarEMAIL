// C:\grupo-locar-form\api\submit.js

const formidable = require("formidable-serverless");
const { MongoClient } = require("mongodb");
const nodemailer = require("nodemailer");
const path = require("path");
require("dotenv").config({ path: path.resolve(__dirname, "../.env") }); // ← correção aqui
// console.log("Verificando variáveis de ambiente...");
// console.log("MONGODB_URI:", process.env.MONGODB_URI);
// console.log("EMAIL_USER:", process.env.EMAIL_USER);
// console.log("EMAIL_PASS:", process.env.EMAIL_PASS);

let cachedDb = null;

async function connectToDatabase(uri) {
  // console.log("URI recebida:", uri); // adicione isso
  if (cachedDb) return cachedDb;
  const client = new MongoClient(uri);
  await client.connect();
  cachedDb = client.db();
  return cachedDb;
}

module.exports = async (req, res) => {
  if (req.method !== "POST") {
    return res.status(405).send("Método não permitido");
  }

  const form = new formidable.IncomingForm({ multiples: true });

  form.parse(req, async (err, fields, files) => {
    if (err) {
      console.error("Erro ao processar o formulário:", err);
      return res.status(400).send("Erro no envio.");
    }

    try {
      // 1. Salvar no MongoDB
      const db = await connectToDatabase(process.env.MONGODB_URI);
      const dados = {
        ...fields,
        arquivos: Object.keys(files),
        data_envio: new Date()
      };
      await db.collection("funcionarios").insertOne(dados);

      // 2. Enviar e-mail
//       const transporter = nodemailer.createTransport({
//         service: "Outlook",
//         auth: {
//           user: process.env.EMAIL_USER,
//           pass: process.env.EMAIL_PASS
//         }
//       });

//       await transporter.sendMail({
//         from: process.env.EMAIL_USER,
//         to: "controladoria.locar@outlook.com",
//         subject: "Novo cadastro recebido",
//         text: `Novo formulário recebido de ${fields.nome}

// Email: ${fields.email}
// Telefone: ${fields.telefone}
// Arquivos: ${Object.keys(files).join(", ")}`
//       });

      console.log("Campos recebidos:", fields);
      console.log("Arquivos recebidos:", Object.keys(files));

      res.status(200).json({ status: "ok", recebidos: { fields, arquivos: Object.keys(files) } });
    } catch (error) {
      console.error("Erro interno:", error);
      res.status(500).json({
        status: "erro",
        message: "Erro ao salvar ou enviar email.",
        detalhe: error.message
      });

    }
  });
};

